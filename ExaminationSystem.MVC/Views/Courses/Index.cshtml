@model CourseAddEditViewModel


@{
	ViewData["Title"] = "Courses List - Pages";
	var hasDeptId = ViewBag.DeptIdFilter != null;
}

@section VendorStyles {
	<link rel="stylesheet" href="~/vendor/libs/datatables-bs5/datatables.bootstrap5.css">
	<link rel="stylesheet" href="~/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css">
	<link rel="stylesheet" href="~/vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.css">
	<link rel="stylesheet" href="~/vendor/libs/select2/select2.css" />
	<link rel="stylesheet" href="~/vendor/libs/&#64;form-validation/form-validation.css" />
	<link rel="stylesheet" href="~/vendor/libs/bs-stepper/bs-stepper.css" />
	<link rel="stylesheet" href="~/vendor/libs/bootstrap-select/bootstrap-select.css" />
	<link rel="stylesheet" href="~/vendor/libs/animate-css/animate.css">
	<link rel="stylesheet" href="~/vendor/libs/sweetalert2/sweetalert2.css" />
}

@section VendorScripts {
	<script src="~/vendor/libs/moment/moment.js"></script>
	<script src="~/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
	<script src="~/vendor/libs/select2/select2.js"></script>
	<script src="~/vendor/libs/&#64;form-validation/popular.js"></script>
	<script src="~/vendor/libs/&#64;form-validation/bootstrap5.js"></script>
	<script src="~/vendor/libs/&#64;form-validation/auto-focus.js"></script>
	<script src="~/vendor/libs/cleavejs/cleave.js"></script>
	<script src="~/vendor/libs/cleavejs/cleave-phone.js"></script>
	<script src="~/vendor/libs/bs-stepper/bs-stepper.js"></script>
	<script src="~/vendor/libs/bootstrap-select/bootstrap-select.js"></script>
	<script src="~/vendor/libs/select2/select2.js"></script>
	<script src="~/vendor/libs/&#64;form-validation/popular.js"></script>
	<script src="~/vendor/libs/&#64;form-validation/bootstrap5.js"></script>
	<script src="~/vendor/libs/&#64;form-validation/auto-focus.js"></script>
	<script src="~/vendor/libs/sweetalert2/sweetalert2.js"></script>
}


@* ************** Content ************** *@

<div class="row g-6 mb-6">
	<div class="col-sm-6 col-xl-3">
		<div class="card">
			<div class="card-body">
				<div class="d-flex align-items-start justify-content-between">
					<div class="content-left">
						<span class="text-heading">Session</span>
						<div class="d-flex align-items-center my-1">
							<h4 class="mb-0 me-2">21,459</h4>
							<p class="text-success mb-0">(+29%)</p>
						</div>
						<small class="mb-0">Total Users</small>
					</div>
					<div class="avatar">
						<span class="avatar-initial rounded bg-label-primary">
							<i class="ti ti-users ti-26px"></i>
						</span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-sm-6 col-xl-3">
		<div class="card">
			<div class="card-body">
				<div class="d-flex align-items-start justify-content-between">
					<div class="content-left">
						<span class="text-heading">Paid Users</span>
						<div class="d-flex align-items-center my-1">
							<h4 class="mb-0 me-2">4,567</h4>
							<p class="text-success mb-0">(+18%)</p>
						</div>
						<small class="mb-0">Last week analytics </small>
					</div>
					<div class="avatar">
						<span class="avatar-initial rounded bg-label-danger">
							<i class="ti ti-user-plus ti-26px"></i>
						</span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-sm-6 col-xl-3">
		<div class="card">
			<div class="card-body">
				<div class="d-flex align-items-start justify-content-between">
					<div class="content-left">
						<span class="text-heading">Active Users</span>
						<div class="d-flex align-items-center my-1">
							<h4 class="mb-0 me-2">19,860</h4>
							<p class="text-danger mb-0">(-14%)</p>
						</div>
						<small class="mb-0">Last week analytics</small>
					</div>
					<div class="avatar">
						<span class="avatar-initial rounded bg-label-success">
							<i class="ti ti-user-check ti-26px"></i>
						</span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-sm-6 col-xl-3">
		<div class="card">
			<div class="card-body">
				<div class="d-flex align-items-start justify-content-between">
					<div class="content-left">
						<span class="text-heading">Pending Users</span>
						<div class="d-flex align-items-center my-1">
							<h4 class="mb-0 me-2">237</h4>
							<p class="text-success mb-0">(+42%)</p>
						</div>
						<small class="mb-0">Last week analytics</small>
					</div>
					<div class="avatar">
						<span class="avatar-initial rounded bg-label-warning">
							<i class="ti ti-user-search ti-26px"></i>
						</span>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- Users List Table -->
<div class="card">
	<div class="card-header border-bottom">
		<h5 class="card-title mb-0">Filters</h5>
		<div class="d-flex justify-content-between align-items-center row pt-4 gap-4 gap-md-0">
			<div class="col-md-4 user_role"></div>
			<div class="col-md-4 user_plan"></div>
			<div class="col-md-4 user_status"></div>
			<div class="col-md-3">
				<select id="departmentFilter" class="select2 form-select">
					<option selected>Filter by Department</option>
					@foreach (var dept in ViewBag.Departments)
					{
						<option value="@dept.Id" selected="@(ViewBag.DeptIdFilter != null && dept.Id == (int)ViewBag.DeptIdFilter)">@dept.Name</option>
					}
				</select>
			</div>

			<div class="col-md-3">
				<select id="statusFilter" class="form-select">
					<option value="">Filter by Status</option>
					<option value="false">Active</option>
					<option value="true">InActive</option>
				</select>
			</div>
				<div class="col-md-3">
					@if (hasDeptId)
					{
						<a href="@Url.Action("ShowDepartments", "Branches", new { branchId = ViewBag.BranchId })" class="btn btn-primary w-100">
							<i class="ti ti-arrow-left"></i> Back to Department List
						</a>

					}
					else
					{
						<button type="button" class="btn btn-primary w-100" data-bs-toggle="modal" data-bs-target="#largeModal">
							<i class="ti ti-plus"></i> Add Course
						</button>
					}
				</div>

		
		<div class="table-responsive text-nowrap">
			<table id="coursesTable" class="table table-hover">
				<thead>
					<tr>
						<th>Name</th>
						<th>Duration</th>
						<th>Number of Topics</th>
						<th>Status</th>
						<th>Actions</th>
					</tr>
				</thead>
				<tbody class="table-border-bottom-0"></tbody>
			</table>
		</div>
	</div>
	<!-- Offcanvas to add new user -->
</div>
<div class="modal fade" id="courseModal" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Course</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body">
				<form asp-action="AddCourse" asp-controller="Courses" method="post" id="courseForm">
					<input asp-for="Id" type="hidden" id="courseId" />
					<div class="row g-4">
						<div class="col-md-6">
							<label asp-for="Name" class="form-label"></label>
							<input asp-for="Name" class="form-control" id="courseName" maxlength="" />
							<span asp-validation-for="Name" class="text-danger"></span>
						</div>
						<div class="col-md-6">
							<label asp-for="Duration" class="form-label"></label>
							<input asp-for="Duration" class="form-control" id="courseDuration" />
							<span asp-validation-for="Duration" class="text-danger"></span>
						</div>
						<div class="col-md-12">
							<label asp-for="SelectedTopicIds" class="form-label"></label>
							<select asp-for="SelectedTopicIds" class="select2 form-select" id="courseTopics" multiple="multiple">
							
							</select>
							<span asp-validation-for="SelectedTopicIds" class="text-danger"></span>

							
						
						</div>
						<div class="mt-4 d-flex justify-content-end gap-2">
							<button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
							<button type="submit" class="btn btn-primary">Save</button>
						</div>
				</form>
			</div>
		</div>
	</div>
</div>




@section PageScripts {

	<script src="~/js/app-user-list.js"></script>
	<script src="~/js/form-wizard-numbered.js"></script>
	<script src="~/js/form-wizard-validation.js"></script>
	<script src="~/js/ui-modals.js"></script>
	<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
	<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
	<script>
		$(document).ready(function () {



				$("form").validate();
					$("form input").keyup(function() {
						$(this).valid();
					});

				window.alert = function () {
							// Do nothing or log it for debug
							console.log("Default alert suppressed."); // stop the default alert
						};


				var table = $('#coursesTable').DataTable({
				processing: true,
				serverSide: true,
				ajax: {
					url: '/Courses/GetAllCourses',
					type: 'POST',
					data: function (d) {
						d.deptId = $('#departmentFilter').val();
				        d.isDeleted = $('#statusFilter').val();
					},
					dataSrc: function (json) {
						if (!json.data || json.data.length === 0) {
							console.log("No data returned from server.");
						} else {
							console.log("Returned data:", json.data);
						}
						return json.data;
					}
					},
				columns: [
					{ data: 'name' },
			        { data: 'duration' },
			        { data: 'numberOfTopics' },
					{
						data: null,
						render: function(data) {
							if(data.isDeleted == false)
							  return '<span class="badge bg-label-primary me-1">Active</span>';
							else
								  return '<span class="badge bg-label-danger me-1">Inactive</span>'
						}
					},
					{
			data: null,
			render: function(data) {
				if (data.isDeleted) {
					return `
						<div class="dropdown">
							<button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
								<i class="ti ti-dots-vertical"></i>
							</button>
							<div class="dropdown-menu">
								<a class="dropdown-item text-success" href="javascript:void(0);" onclick="restoreCourse(${data.id})">
									<i class="ti ti-refresh me-1"></i> Activate
								</a>
							</div>
						</div>`;
				} else {
					return `
						<div class="dropdown">
							<button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
								<i class="ti ti-dots-vertical"></i>
							</button>
							<div class="dropdown-menu">
								<a class="dropdown-item" href="/Courses/Details/${data.id}">
									<i class="ti ti-eye me-1"></i> Details
								</a>
		                    <a class="dropdown-item" href="javascript:void(0);" onclick="openEditCourse(${data.id})">
	                    		<i class="ti ti-pencil me-1"></i> Edit
		                    </a>
								<a class="dropdown-item text-danger" href="javascript:void(0);" onclick="deleteCourse(${data.id})">
									<i class="ti ti-trash me-1"></i> Delete
								</a>
							</div>
						</div>`;
				}
			}
		}

				],
				language: {
					paginate: {
						previous: '<span aria-hidden="true">⟨</span>',
						next: '<span aria-hidden="true">⟩</span>'
					}
				}
			});

			$('#searchTerm').on('input', function () {
				table.search($(this).val()).draw();
			});

				$('#departmentFilter, #statusFilter').change(function () {
				table.draw();
			});
		});
				$('.btn-primary[data-bs-target="#largeModal"]').on('click', function () {
			$('#courseForm')[0].reset();
			$('#courseId').val('');
			$('#courseTopics').empty();
			$.get('/Courses/GetAvailableTopics', function (topics) {
				topics.forEach(t => {
					$('#courseTopics').append(`<option value="${t.id}">${t.name}</option>`);
				});
				$('#courseTopics').val(null).trigger('change');
			});
			$('#courseModal').modal('show');
			
		});
		const $form = $('#courseForm');
		const $select = $('#courseTopics');
		    	$select.select2().on('select2:close', function () {
				$form.validate().element(this); 
			});
				function openEditCourse(id) {
			$.get(`/Courses/GetCourseForEdit/${id}`, function (model) {
				if (model) {
					$('#courseId').val(model.id);
					$('#courseName').val(model.name);
					$('#courseDuration').val(model.duration);
					$('#courseTopics').empty();
					model.availableTopics.forEach(t => {
						const selected = model.selectedTopicIds.includes(t.id) ? 'selected' : '';
						$('#courseTopics').append(`<option value="${t.id}" ${selected}>${t.name}</option>`);
					});
					$('#courseForm').find('.text-danger').text('');
		        	$('#courseForm').find('.input-validation-error').removeClass('input-validation-error');
					$('#courseModal').modal('show');
				
				}
			});
		}
				$('#courseForm').on('submit', function (e) {
			e.preventDefault();
						if (!$(this).valid()) {
					   return;
				   }
			const formData = {
				Id: $('#courseId').val(),
				Name: $('#courseName').val(),
				Duration: $('#courseDuration').val(),
				SelectedTopicIds: $('#courseTopics').val()
			};
			const isEdit = formData.Id !== '';

			const url = isEdit ? '/Courses/EditCourse' : '/Courses/AddCourse';

			$.ajax({
				url: url,
				type: 'POST',
				data: formData,
				success: function (response) {
					if (response.success) {
						$('#courseModal').modal('hide');
						$('#coursesTable').DataTable().ajax.reload();
						Swal.fire('Success!', response.message, 'success');
					} else {
						Swal.fire('Error!', response.message, 'error');
					}
				},
				error: function () {
					Swal.fire('Error!', 'Something went wrong.', 'error');
				}
			});
		});

		function deleteCourse(courseId) {
			Swal.fire({
				title: 'Are you sure?',
				text: "You won't be able to revert this!",
				icon: 'warning',
				showCancelButton: true,
				confirmButtonColor: '#3085d6',
				cancelButtonColor: '#d33',
				confirmButtonText: 'Yes, delete it!'
			}).then((result) => {
				if (result.isConfirmed) {
					$.ajax({
						url: `/Courses/Delete/${courseId}`,
						type: 'POST',
						success: function (response) {
							if (response.success) {
								$('#coursesTable').DataTable().ajax.reload();
								Swal.fire(
									'Deleted!',
									'Course has been deleted.',
									'success'
								);
							} else {
								Swal.fire(
									'Error!',
									response.message || 'Failed to delete Course.',
									'error'
								);
							}
						},
						error: function () {
							Swal.fire(
								'Error!',
								'An error occurred while deleting the Course.',
								'error'
							);
						}
					});
				}
			});
		}
				function restoreCourse(courseId) {
			Swal.fire({
				title: 'Are you sure?',
				text: 'This will activate the course again!',
				icon: 'question',
				showCancelButton: true,
				confirmButtonText: 'Yes, activate it!',
				cancelButtonText: 'Cancel'
			}).then((result) => {
				if (result.isConfirmed) {
					$.ajax({
						url: '/Courses/RestoreCourse',
						type: 'POST',
						data: { id: courseId },
						success: function (response) {
							if (response.success) {
								$('#coursesTable').DataTable().ajax.reload();
								Swal.fire('Activated!', 'Course has been activated.', 'success');
							} else {
								Swal.fire('Error!', response.message || 'Failed to activate course.', 'error');
							}
						},
						error: function () {
							Swal.fire('Error!', 'Something went wrong while activating course.', 'error');
						}
					});
				}
			});
		}


	</script>
}
