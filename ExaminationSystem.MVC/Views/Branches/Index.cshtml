
@model PaginatedResult<BranchViewModel>

<style>
	.show-delete-button {
		display: block !important;
	}

	.hide-delete-button {
		display: none !important;
	}

</style>


@section VendorStyles {
	<link rel="stylesheet" href="~/vendor/libs/sweetalert2/sweetalert2.css" />
	<link rel="stylesheet" href="~/vendor/libs/select2/select2.css" />
	<link rel="stylesheet" href="~/vendor/libs/&#64;form-validation/form-validation.css" />
	<link rel="stylesheet" href="~/vendor/libs/bootstrap-select/bootstrap-select.css" />
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

}

@section VendorScripts {

	<script src="~/vendor/libs/sweetalert2/sweetalert2.js"></script>
	<script src="~/vendor/libs/select2/select2.js"></script>
	<script src="~/vendor/libs/&#64;form-validation/popular.js"></script>
	<script src="~/vendor/libs/&#64;form-validation/bootstrap5.js"></script>
	<script src="~/vendor/libs/&#64;form-validation/auto-focus.js"></script>
	<script src="https://cdn.jsdelivr.net/gh/dciccale/jquery-clearsearch/jquery.clearsearch.min.js"></script>

}
<div class="row mb-3">
	<div class="col-md-8">
		<div class="position-relative">
			<input type="text" id="branchSearch" class="form-control pe-5" placeholder="Search by location or manager name..." />
			<button type="button" id="clearSearchBtn" class="btn position-absolute end-0 top-50 translate-middle-y me-2 p-0 border-0 bg-transparent d-none">
				<i class="bi bi-x text-muted fs-5"></i>

			</button>
		</div>
	</div>
	<div class="col-md-4 text-end">
		<button class="btn btn-primary w-100" id="addNewBranchBtn">
			<i class="ti ti-plus"></i> Add New Branch
		</button>
	</div>
</div>



<div id="branch-list-container">
	@Html.Partial("_BranchCardListPartial", Model)
</div>


	


<div id="modalContainer"></div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>

	
	$(document).ready(function () {

	$('#branchSearch').on('input', function () {
	  const val = $(this).val();
	  $('#clearSearchBtn').toggleClass('d-none', val.length === 0);
	  loadBranches(val, 1);
	});

	$('#clearSearchBtn').on('click', function () {
	  $('#branchSearch').val('');
	  $(this).addClass('d-none');
	  loadBranches('', 1);
	});

	let page = 1;
	const pageSize = 9;

	function loadBranches(search = '', pageNumber = 1) {
		$.get('/Branches/Index', {
			search: search,
			page: pageNumber,
			pageSize: 9,
			isPartial: true
		}, function (html) {
			$('#branch-list-container').html(html);
			window.scrollTo({ top: 0, behavior: 'auto' });

			const meta = $('#pagination-meta');
			const currentPage = parseInt(meta.data('current-page'));
			const totalPages = parseInt(meta.data('total-pages'));

			
		});
	}
		loadBranches();


	$(document).on('click', '#pagination-container .page-link', function () {
		const pageClicked = parseInt($(this).data('page'));
		if (!isNaN(pageClicked)) {
			loadBranches($('#branchSearch').val(), pageClicked);
		}
	});

		
	



		// Delete manager
	$(document).on('click', '.delete-manager-btn', function (e) {
		e.preventDefault();
		const branchId = $(this).data("id");

		Swal.fire({
			title: 'Are you sure?',
			text: "This will remove the current manager from this branch.",
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#d33',
			cancelButtonColor: '#6c757d',
			confirmButtonText: 'Yes, delete manager!'
		}).then((result) => {
			if (result.isConfirmed) {
				$.ajax({
					type: "POST",
					url: `/Branches/DeleteManagerConfirmed/${branchId}`,
					success: function (response) {
						if (response.success) {
							const $card = $('#branch-' + branchId);
							$card.find('.branch-manager').html('Manager: <strong>Not Assigned</strong>');
							$card.find('.delete-manager-btn').removeClass('show-delete-button').addClass('hide-delete-button');
							$card.find('.assign-branch-btn')
								.html('<i class="bi bi-pencil-fill"></i> Assign Manager');

							Swal.fire({
								icon: 'success',
								title: 'Deleted!',
								text: response.message || 'Manager removed successfully.',
								timer: 2000,
								showConfirmButton: false
							});
						} else {
							Swal.fire({
								icon: 'error',
								title: 'Error!',
								text: response.message || 'Could not delete the manager.'
							});
						}
					},
					error: function () {
						Swal.fire({
							icon: 'error',
							title: 'Error!',
							text: 'An error occurred while deleting the manager.'
						});
					}
				});
			}
		});
	});


		// Assign manager
		$(document).on('click', '.assign-branch-btn', function (e) {
			e.preventDefault();
			var branchId = $(this).data("id");

			$.ajax({
				type: "GET",
				url: '@Url.Action("AssignManager", "Branches")/' + branchId,
				success: function (data) {
					$('#modalContainer').html(data);
					var modal = new bootstrap.Modal(document.getElementById('assignManagerModal'));
					modal.show();

					$(document).on('shown.bs.modal', '#assignManagerModal', function () {
						$('#staffSelect').select2({
							placeholder: "Select a staff member",
							allowClear: true,
							dropdownParent: $('#assignManagerModal')
						}).trigger('change');
					});
				},
				error: function () {
					alert("An error occurred while loading the assign manager modal.");
				}
			});
		});

		// Edit branch
		$(document).on('click', '.edit-branch-btn', function (e) {
			e.preventDefault();
			var branchId = $(this).data("id");

			$.ajax({
				type: "GET",
				url: '@Url.Action("Edit", "Branches")/' + branchId,
				success: function (data) {
					$('#modalContainer').html(data);
					$.validator.unobtrusive.parse('#editBranchForm');
					var modal = new bootstrap.Modal(document.getElementById('editBranchModal-' + branchId));
					modal.show();

					$(document).on('shown.bs.modal', '#editBranchModal-' + branchId, function () {
						$('#ZipCode').select2({
							placeholder: "Select a location",
							allowClear: true,
							dropdownParent: $('#editBranchModal-' + branchId)
						}).trigger('change');
					});
				},
				error: function () {
					alert("An error occurred while loading the edit branch modal.");
				}
			});
		});

		// Add new branch
		$(document).on('click', '#addNewBranchBtn', function (e) {
			e.preventDefault();

			$.ajax({
				type: "GET",
				url: '@Url.Action("Add", "Branches")',
				success: function (data) {
					$('#modalContainer').html(data);
					$.validator.unobtrusive.parse('#editBranchForm');
					var modal = new bootstrap.Modal(document.getElementById('editBranchModal-0'));
					modal.show();

					$(document).on('shown.bs.modal', '#editBranchModal-0', function () {
						$('#ZipCode').select2({
							placeholder: "Select a location",
							allowClear: true,
							dropdownParent: $('#editBranchModal-0')
						}).trigger('change');
					});
				},
				error: function () {
					alert("An error occurred while loading the add branch modal.");
				}
			});
		});

		// Delete branch
	$(document).on('click', '.dropdown-item.text-danger', function (e) {
		e.preventDefault();
		var branchId = $(this).data("id");

		Swal.fire({
			title: 'Are you sure?',
			text: "You won't be able to revert this!",
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: 'Yes, delete it!'
		}).then((result) => {
			if (result.isConfirmed) {
				$.ajax({
					url: `/Branches/DeleteConfirmed/${branchId}`,
					type: 'POST',
					success: function (response) {
						if (response.success) {
							$(`#branch-${branchId}`).remove();
							Swal.fire(
								'Deleted!',
								'Branch has been deleted.',
								'success'
							);
						} else {
							Swal.fire(
								'Error!',
								response.message || 'Failed to delete branch.',
								'error'
							);
						}
					},
					error: function () {
						Swal.fire(
							'Error!',
							'An error occurred while deleting the branch.',
							'error'
						);
					}
				});
			}
		});
	});
	});



</script>


