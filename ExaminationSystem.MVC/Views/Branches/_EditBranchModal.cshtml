@model ExaminationSystem.MVC.ViewModels.BranchViewModels.BranchEditViewModel

<style>
	.select2-hidden-before-init {
	visibility: hidden;
}

</style>


<div class="modal fade" id="editBranchModal-@Model.Id" tabindex="-1" aria-labelledby="editBranchModalLabel-@Model.Id" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="editBranchModalLabel-@Model.Id">
					@if (Model.Id == 0)
					{
						<text>Add New Branch</text>
					}
					else
					{
						<text>Edit Branch - @Model.LocationName</text>
					}
				</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="editBranchForm" method="post" asp-action="@((Model.Id == 0) ? "Add" : "Edit")" asp-route-id="@Model.Id">
					<input type="hidden" name="Id" value="@Model.Id" />


            <div class="mb-3">
                <label asp-for="ZipCode" class="form-label"></label>
               <select asp-for="ZipCode" id="ZipCode" class="select2 form-select select2-hidden-before-init ">

                            <option value="" >Select a location</option>
							@foreach (var location in ViewBag.Locations)
{
                         <option value="@location.ZipCode">@location.LocationName</option>
}

                </select>
                 <span asp-validation-for="ZipCode" class="text-danger"></span>
				
            </div>         


				
                   <div class="mb-3">
                    <label asp-for="StreetNo" class="form-label"></label>
                    <input asp-for="StreetNo" class="form-control" />
                    <span asp-validation-for="StreetNo" class="text-danger"></span>
					

                   </div>
					<div class="mb-3">
						<label asp-for="SelectedDepartmentIds" class="form-label"></label>
						<select asp-for="SelectedDepartmentIds" class="select2 form-select" id="branchDepartments" multiple="multiple">

							@foreach (var dept in Model.AvailableDepartments)
							{
								
								<option value="@dept.Id" selected="@(Model.SelectedDepartmentIds.Contains(dept.Id))">
									@dept.Name
								</option>
							}
						</select>
						<span asp-validation-for="SelectedDepartmentIds" class="text-danger"></span>
					</div>



					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
						<button type="submit" class="btn btn-primary">
							@(Model.Id == 0 ? "Add Branch" : "Save Changes")
						</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<script>
$(document).ready(function () {

	$('#editBranchForm').on('submit', function (e) {
		e.preventDefault();
		if (!$(this).valid()) return;

		var formData = $(this).serialize();

		$.ajax({
			type: 'POST',
			url: $(this).attr('action'),
			data: formData,
			success: function (response) {
				try {
					//Edit Branch
					if (typeof response === 'object' && response.success) {
						$('#editBranchModal-' + response.id).modal('hide');

						if (response.id !== 0) {
							$('#branch-' + response.id + ' .location').text(response.branch.zipCode);
							$('#branch-' + response.id + ' .streetNo').text(response.branch.streetNo);
							$('#branch-' + response.id + ' .locName').text(response.branch.locationName + " Branch");
							$('#branch-' + response.id + ' .number-of-departments').text(response.branch.numberOfDepartments);

						}

						Swal.fire({
							icon: 'success',
							title: 'Success!',
							text: 'Branch updated successfully.',
							timer: 2000,
							showConfirmButton: false
						});
					}
					//Add Branch
	             else if (typeof response === 'string' && $(response).filter('div.col-lg-4').length > 0) {
	             $('#editBranchModal-0').modal('hide');
	             $('#branch-list').prepend(response);
	             $('#branch-list .col-lg-4').last().remove();

	            Swal.fire({
	            icon: 'success',
		        title: 'Success!',
		        text: 'Branch added successfully.',
		        timer: 2000,
		        showConfirmButton: false

	            });
                }

					
					else {
						$('#editBranchModal-0').modal('hide');
						$('#branch-list').prepend(response);
						$('#branch-list .col-lg-4').last().remove();

						Swal.fire({
							icon: 'warning',
							title: 'Validation Failed',
							text: 'Please check the required fields and try again.'
						});
					}
				} catch (e) {
					$('#editBranchModal-0').modal('hide');
					$('#branch-list').prepend(response);
					$('#branch-list .col-lg-4').last().remove();

					Swal.fire({
						icon: 'warning',
						title: 'Validation Error',
						text: 'Please check your inputs.'
					});
				}
			},
	error: function (xhr) {
		Swal.fire({
			icon: 'error',
			title: 'Oops!',
			text: 'Something went wrong. Please try again later.'
		});
	}

		});
			});


	$('#editBranchModal-@Model.Id').on('hide.bs.modal', function () {
		const modal = this;
		const focused = document.activeElement;
		if (modal.contains(focused)) {
			focused.blur();
		}
	});

});


</script>

