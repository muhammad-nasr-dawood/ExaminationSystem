// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using ExaminationSystem.Core.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace ExaminationSystem.Core.Models
{
    public partial interface IExaminationDBContextProcedures
    {
        Task<int> AddBranchAsync(string zipCode, string streetNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddCourseAsync(string crsName, int? crsDuration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddDepartmentAsync(string name, string disc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddMCQuestionAsync(long? staffId, byte? level, string content, int? topicId, byte? answerIndex, DataTable images, DataTable answers, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AddQuestionResult>> AddQuestionAsync(long? staffId, byte? type, byte? level, string content, int? topicId, byte? anserIndex, DataTable images, DataTable answers, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddQuestionsToPoolAsync(long? staffId, int? poolId, DataTable questionsIds, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddStaffBranchManageAsync(long? staffSSN, int? branchId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddTFQuestionsAsync(long? staffId, byte? level, string content, int? topicId, bool? isTrue, DataTable images, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddTopicAsync(string topicName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddTopicToCourseAsync(int? courseId, int? topicId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> BranchDeptsCreateAsync(int? branchId, int? deptId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> BranchDeptsDeleteAsync(int? branchId, int? deptId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BranchDeptsGetResult>> BranchDeptsGetAsync(int? branchId, int? deptId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> BranchDeptsUpdateAsync(int? oldBranchId, int? oldDeptId, int? newBranchId, int? newDeptId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreatePoolAsync(long? staffId, int? courseId, int? deptId, int? branchId, DataTable questionIds, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteBranchAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteDepartmentAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteQuestionAsync(long? staffId, int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteStaffBranchManageAsync(long? staffSSN, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> GenerateExamModelsAsync(int? poolId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllBranchesResult>> GetAllBranchesAsync(int? pageNumber, int? pageSize, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllCoursesResult>> GetAllCoursesAsync(int? pageSize, int? pageNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllDepartmentsResult>> GetAllDepartmentsAsync(string search, int? pageNumber, int? pageSize, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllStaffBranchManageResult>> GetAllStaffBranchManageAsync(int? branchId, string searchTerm, int? pageNumber, int? pageSize, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllTopicsResult>> GetAllTopicsAsync(int? size, int? pageNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBranchByIdResult>> GetBranchByIdAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCourseByIdResult>> GetCourseByIdAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCoursesByTopicResult>> GetCoursesByTopicAsync(int? topicId, int? pageSize, int? pageNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetDepartmentByIdResult>> GetDepartmentByIdAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> GetQuestionsAsync(int? topicId, byte? order, byte? qType, int? page, int? limit, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStaffBranchManageByBranchIdResult>> GetStaffBranchManageByBranchIdAsync(int? branchId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTopicByIdResult>> GetTopicByIdAsync(int? topicId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTopicsByCourseResult>> GetTopicsByCourseAsync(int? courseId, int? pageSize, int? pageNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InitExamStudentAsync(DataTable stdIds, int? noOfModels, int? poolId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertStudentResponsesResult>> InsertStudentResponsesAsync(string studentResponses, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> IntakeDeptCoursesCreateAsync(int? deptId, int? courseId, int? intakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> IntakeDeptCoursesDeleteAsync(int? deptId, int? courseId, int? intakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<IntakeDeptCoursesGetResult>> IntakeDeptCoursesGetAsync(int? deptId, int? courseId, int? intakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> IntakeDeptCoursesUpdateAsync(int? oldDeptId, int? oldCourseId, int? oldIntakeId, int? newDeptId, int? newCourseId, int? newIntakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> IntakesCreateAsync(int? id, byte? isRunning, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> IntakesDeleteAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<IntakesGetResult>> IntakesGetAsync(int? id, byte? isRunning, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> IntakesUpdateAsync(int? oldId, int? newId, byte? newIsRunning, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LocationsCreateAsync(string zipCode, string governorate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LocationsDeleteAsync(string zipCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LocationsGetResult>> LocationsGetAsync(string zipCode, string governorate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LocationsUpdateAsync(string oldZipCode, string newZipCode, string newGovernorate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> RemoveQuestionFromPoolAsync(long? staffId, int? poolId, DataTable questionsIds, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> RoleCreateAsync(string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleGetAllResult>> RoleGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleGetByIdResult>> RoleGetByIdAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> RoleUpdateAsync(int? id, string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SetConfigurationsAsync(long? staffId, int? poolId, int? noOfDiff, int? noOfMed, int? noOfEasy, int? gradeForDiff, int? gradeForMid, int? gradeForEasy, int? noOfModels, DataTable excludedStdIds, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SetExamSessionAsync(long? staffId, int? poolId, DateOnly? date, TimeOnly? startingTime, TimeOnly? endingTime, int? duration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffBranchDeptManageCreateAsync(long? staffSSN, int? branchId, int? deptID, DateOnly? hiringDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffBranchDeptManageDeleteAsync(int? branchId, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StaffBranchDeptManageGetResult>> StaffBranchDeptManageGetAsync(long? staffSSN, int? branchId, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffBranchDeptManageUpdateAsync(int? oldBranchId, int? oldDeptID, long? newStaffSSN, int? newBranchId, int? newDeptID, DateOnly? newHiringDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffBranchDeptWorksForCreateAsync(long? staffSSN, int? branchId, int? deptID, DateOnly? hiringDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffBranchDeptWorksForDeleteAsync(long? staffSSN, int? branchId, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StaffBranchDeptWorksForGetResult>> StaffBranchDeptWorksForGetAsync(long? staffSSN, int? branchId, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffBranchDeptWorksForUpdateAsync(long? oldStaffSSN, int? oldBranchId, int? oldDeptID, long? newStaffSSN, int? newBranchId, int? newDeptID, DateOnly? newHiringDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffBranchIntakeDeptCourseTeachCreateAsync(long? staffSSN, int? branchId, int? deptID, int? courseId, int? intakeId, DateTime? startingDate, DateTime? endingDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffBranchIntakeDeptCourseTeachDeleteAsync(long? staffSSN, int? branchId, int? deptID, int? courseId, int? intakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StaffBranchIntakeDeptCourseTeachGetResult>> StaffBranchIntakeDeptCourseTeachGetAsync(long? staffSSN, int? branchId, int? deptID, int? courseId, int? intakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffBranchIntakeDeptCourseTeachUpdateAsync(long? oldStaffSSN, int? oldBranchId, int? oldDeptID, int? oldCourseId, int? oldIntakeId, long? newStaffSSN, int? newBranchId, int? newDeptID, int? newCourseId, int? newIntakeId, DateTime? newStartingDate, DateTime? newEndingDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffCreateAsync(long? sSN, string fname, string lname, string email, string passwordHash, byte[] salt, string zipCode, string streetNo, DateOnly? bD, string gender, string image_URL, string phoneNumber, bool? isActive, decimal? salary, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffDeleteAsync(long? sSN, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StaffGetAllResult>> StaffGetAllAsync(string searchterm, decimal? mingpa, decimal? maxgpa, string gender, bool? isactive, int? pagenumber, int? pagesize, string sortorder, int? roleId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StaffGetByEmailResult>> StaffGetByEmailAsync(string email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StaffGetBySSNResult>> StaffGetBySSNAsync(long? ssn, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffRolesCreateAsync(long? staffssn, int? roleid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffRolesDeleteAsync(long? staffssn, int? roleid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StaffUpdateAsync(long? ssn, string fname, string lname, string email, string zipcode, string streetno, DateOnly? bd, string gender, string image_url, string phonenumber, decimal? salary, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StartExamResult>> StartExamAsync(long? studentId, int? examId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StudentCreateAsync(long? sSN, string fname, string lname, string email, string passwordHash, byte[] salt, string zipCode, string streetNo, DateOnly? bD, string gender, string image_URL, string phoneNumber, bool? isActive, string faculty, int? grad_Year, decimal? gPA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StudentDeleteAsync(long? ssn, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StudentGetAllResult>> StudentGetAllAsync(string searchterm, string faculty, int? grad_year, decimal? mingpa, decimal? maxgpa, string gender, bool? isactive, int? pagenumber, int? pagesize, string sortorder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StudentGetByEmailResult>> StudentGetByEmailAsync(string email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StudentGetBySSNResult>> StudentGetBySSNAsync(long? ssn, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StudentIntakeBranchDeptStudyCreateAsync(long? studentSSN, int? branchId, int? deptID, int? intakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StudentIntakeBranchDeptStudyDeleteAsync(long? studentSSN, int? intakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StudentIntakeBranchDeptStudyGetResult>> StudentIntakeBranchDeptStudyGetAsync(long? studentSSN, int? branchId, int? deptID, int? intakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StudentIntakeBranchDeptStudyUpdateAsync(long? oldStudentSSN, int? oldIntakeId, long? newStudentSSN, int? newBranchId, int? newDeptID, int? newIntakeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> StudentUpdateAsync(long? ssn, string fname, string lname, string email, string zipcode, string streetno, DateOnly? bd, string gender, string image_url, string phonenumber, string faculty, int? grad_year, decimal? gpa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TeachAtResult>> TeachAtAsync(long? staffId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateBranchAsync(int? id, string zipCode, string streetNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateConfigurationGradesAsync(long? staffId, int? poolId, int? gradeForDiff, int? gradeForMed, int? gradeForEasy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateConfigurationsAsync(long? staffId, int? poolId, int? noOfDiff, int? noOfMed, int? noOfEasy, int? gradeForDiff, int? gradeForMed, int? gradeForEasy, int? noOfModels, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateConfigurationStudentListAsync(int? poolId, long? staffId, DataTable excludedStds, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateCourseResult>> UpdateCourseAsync(int? id, string crsName, int? crsDuration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateDepartmentAsync(int? id, string name, string disc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateStaffBranchManageAsync(long? staffSSN, int? branchId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateTopicAsync(int? topicId, string newTopicName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ValidateSessionDataAsync(long? staffId, int? poolId, DateOnly? date, TimeOnly? startingTime, TimeOnly? endingTime, int? duration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
